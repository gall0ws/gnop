/* $Id$
 *
 * Copyright (c) 2009 Sergio Perticone <g4ll0ws@gmail.com>
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef AUDIO_H
#define AUDIO_H

#include "common.h"

typedef enum {
	AUDIO_BOUNCE,
	AUDIO_SCORED,
	AUDIO_GAMEOVER,
	AUDIO_SOUND_NO,
} AudioSound;

typedef void (*AudioCallback)(u8 volume, bool mute);

/* 
 * Initialize audio subsystem.
 */
int audio_init (const char *datadir);

/*
 * Close audio subsystem.
 */
void audio_quit (void);

/*
 * Play given sound.
 */
void audio_play (AudioSound sound);

/*
 * Enable/disable mute.
 *
 * This function will return 1 if mute is enabled, otherwise 0 will be returned.
 */
bool audio_toggle_mute (void);

/*
 * Change volume.
 *
 * This functions will return the (eventually) new audio volume.
 */
int audio_volume_up   (void);
int audio_volume_down (void);

#endif /* !AUDIO_H */
